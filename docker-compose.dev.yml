# =============================================================================
# Docker Compose - Development Environment
# Mateatletas Ecosystem
# =============================================================================
# Uso:
#   docker-compose -f docker-compose.dev.yml up -d
#   docker-compose -f docker-compose.dev.yml down
# =============================================================================

version: '3.8'

services:
  # ===========================================================================
  # PostgreSQL Database
  # ===========================================================================
  postgres:
    image: postgres:16-alpine
    container_name: mateatletas-postgres-dev
    restart: unless-stopped
    environment:
      POSTGRES_USER: mateatletas
      POSTGRES_PASSWORD: mateatletas123
      POSTGRES_DB: mateatletas
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - "5433:5432"
    volumes:
      - postgres_data_dev:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U mateatletas -d mateatletas"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    networks:
      - mateatletas-network

  # ===========================================================================
  # NestJS Backend API
  # ===========================================================================
  api:
    build:
      context: .
      dockerfile: apps/api/Dockerfile.dev
    container_name: mateatletas-api-dev
    restart: unless-stopped
    environment:
      NODE_ENV: development
      PORT: 3001
      DATABASE_URL: postgresql://mateatletas:mateatletas123@postgres:5432/mateatletas?schema=public
      JWT_SECRET: ${JWT_SECRET:-dev-secret-change-in-production}
      JWT_EXPIRES_IN: 7d
    ports:
      - "3001:3001"
    volumes:
      # Mount source code for hot-reload
      - ./apps/api/src:/app/apps/api/src:ro
      - ./apps/api/prisma:/app/apps/api/prisma:ro
      # Node modules cache
      - api_node_modules:/app/node_modules
      - api_app_node_modules:/app/apps/api/node_modules
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3001/api/health || exit 1"]
      interval: 15s
      timeout: 5s
      retries: 3
      start_period: 30s
    networks:
      - mateatletas-network

  # ===========================================================================
  # Next.js Frontend Web
  # ===========================================================================
  web:
    build:
      context: .
      dockerfile: apps/web/Dockerfile.dev
    container_name: mateatletas-web-dev
    restart: unless-stopped
    environment:
      NODE_ENV: development
      PORT: 3000
      NEXT_PUBLIC_API_URL: http://localhost:3001/api
    ports:
      - "3000:3000"
    volumes:
      # Mount source code for hot-reload
      - ./apps/web/src:/app/apps/web/src:ro
      - ./apps/web/public:/app/apps/web/public:ro
      # Node modules cache
      - web_node_modules:/app/node_modules
      - web_app_node_modules:/app/apps/web/node_modules
    depends_on:
      api:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3000 || exit 1"]
      interval: 15s
      timeout: 5s
      retries: 3
      start_period: 30s
    networks:
      - mateatletas-network

# =============================================================================
# Volumes
# =============================================================================
volumes:
  postgres_data_dev:
    driver: local
  api_node_modules:
  api_app_node_modules:
  web_node_modules:
  web_app_node_modules:

# =============================================================================
# Networks
# =============================================================================
networks:
  mateatletas-network:
    driver: bridge
