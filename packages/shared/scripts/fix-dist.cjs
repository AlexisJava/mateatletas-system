const fs = require('fs');
const path = require('path');

const distRoot = path.join(__dirname, '..', 'dist');
const sharedSrcDir = path.join(distRoot, 'shared', 'src');
const contractsDir = path.join(distRoot, 'contracts');

function copyIfExists(from, to) {
  if (fs.existsSync(from)) {
    fs.mkdirSync(path.dirname(to), { recursive: true });
    fs.copyFileSync(from, to);
  }
}

// Copy compiled entry points to the dist root
['js', 'js.map', 'd.ts', 'd.ts.map'].forEach((ext) => {
  const source = path.join(sharedSrcDir, `index.${ext}`);
  const target = path.join(distRoot, `index.${ext}`);
  copyIfExists(source, target);
});

// Remove intermediate folders generated by TypeScript when resolving workspace paths
[sharedSrcDir, path.join(distRoot, 'shared'), contractsDir].forEach((dir) => {
  if (fs.existsSync(dir)) {
    fs.rmSync(dir, { recursive: true, force: true });
  }
});
